/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormDPLL.java
 *
 * Created on 24/10/2011, 20:11:34
 */
package dpll;

import java.awt.event.ActionEvent;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Rodrigo
 */
public class FormDPLL extends javax.swing.JFrame {


    public FormDPLL() {
        initComponents();
    }

    public void formula(ActionEvent evt) {
        JButton btt = (JButton) evt.getSource();
        String formula = txtFormula.getText();
        if (formula.toLowerCase().equals("fórmula")) {
            formula = "";
            txtFormula.setText("");
        }
        if (verificaEntrada(btt.getText().charAt(0))) {
            formula += btt.getText();
        }
        txtFormula.setText(formula);
        txtFormula.requestFocus();
        
    }

    public boolean verificaEntrada(char entrada) {
        char v = Character.toUpperCase(entrada);
        String formula = txtFormula.getText().toUpperCase().trim();
        
        
        if(formula.length()==0 && entrada==')'){
            return false;
        }
        if((entrada+"").trim().equals("")){
            return true;
        }
        if(Dpll.ignore.contains(v + "")){
            return true;
        }
        if(formula.length()==0 && (Dpll.literais.contains(v + "")|| Dpll.operacoes.contains(v + "") )){
            return true;
        }
        if (!Dpll.literais.contains(v + "") && !Dpll.operacoes.contains(v + "")) {
            JOptionPane.showMessageDialog(null, "Caractér não permitido.", "Erro", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (Dpll.literais.contains(v + "") && Dpll.literais.contains(formula.charAt(formula.length() - 1) + "")) {
            JOptionPane.showMessageDialog(null, "Um literal não pode ser seguido de outro literal", "Erro", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (Dpll.operacoes.contains(v + "") && Dpll.operacoes.contains(formula.charAt(formula.length() - 1) + "")) {
            JOptionPane.showMessageDialog(null, "Uma operação não pode ser seguida de outra operação.", "Erro", JOptionPane.WARNING_MESSAGE);
            return false;
        }

        return true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bttAnd = new javax.swing.JButton();
        bttOr = new javax.swing.JButton();
        bttImplica = new javax.swing.JButton();
        bttBiImplica = new javax.swing.JButton();
        bttParentese1 = new javax.swing.JButton();
        bttParentese2 = new javax.swing.JButton();
        txtFormula = new javax.swing.JTextField();
        bttNegacao = new javax.swing.JButton();
        bttParentese5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DPLL");
        getContentPane().setLayout(null);

        jLabel1.setText("    Clique abaixo no item que deseja adicionar:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 430, 30);

        bttAnd.setFont(new java.awt.Font("Arial", 1, 18));
        bttAnd.setText("Λ");
        bttAnd.setToolTipText("E");
        bttAnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttAndActionPerformed(evt);
            }
        });
        getContentPane().add(bttAnd);
        bttAnd.setBounds(20, 30, 50, 50);

        bttOr.setFont(new java.awt.Font("Arial", 1, 18));
        bttOr.setText("+");
        bttOr.setToolTipText("Ou");
        bttOr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttOrActionPerformed(evt);
            }
        });
        getContentPane().add(bttOr);
        bttOr.setBounds(80, 30, 50, 50);

        bttImplica.setFont(new java.awt.Font("Arial", 1, 18));
        bttImplica.setText("→");
        bttImplica.setToolTipText("Implica");
        bttImplica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttImplicaActionPerformed(evt);
            }
        });
        getContentPane().add(bttImplica);
        bttImplica.setBounds(140, 30, 50, 50);

        bttBiImplica.setFont(new java.awt.Font("Arial", 1, 18));
        bttBiImplica.setText("↔");
        bttBiImplica.setToolTipText("Bi-implica");
        bttBiImplica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttBiImplicaActionPerformed(evt);
            }
        });
        getContentPane().add(bttBiImplica);
        bttBiImplica.setBounds(200, 30, 50, 50);

        bttParentese1.setFont(new java.awt.Font("Arial", 1, 18));
        bttParentese1.setText("(");
        bttParentese1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttParentese1ActionPerformed(evt);
            }
        });
        getContentPane().add(bttParentese1);
        bttParentese1.setBounds(260, 30, 50, 50);

        bttParentese2.setFont(new java.awt.Font("Arial", 1, 18));
        bttParentese2.setText(")");
        bttParentese2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttParentese2ActionPerformed(evt);
            }
        });
        getContentPane().add(bttParentese2);
        bttParentese2.setBounds(320, 30, 50, 50);

        txtFormula.setFont(new java.awt.Font("Arial Black", 0, 36)); // NOI18N
        txtFormula.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFormula.setText("Fórmula");
        txtFormula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFormulaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFormulaFocusLost(evt);
            }
        });
        txtFormula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFormulaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFormulaKeyTyped(evt);
            }
        });
        getContentPane().add(txtFormula);
        txtFormula.setBounds(10, 90, 430, 80);

        bttNegacao.setFont(new java.awt.Font("Arial", 1, 18));
        bttNegacao.setText("¬");
        bttNegacao.setToolTipText("Negação");
        bttNegacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttNegacaoActionPerformed(evt);
            }
        });
        getContentPane().add(bttNegacao);
        bttNegacao.setBounds(380, 30, 50, 50);

        bttParentese5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        bttParentese5.setText("Executar DPLL");
        bttParentese5.setToolTipText("Contradição");
        bttParentese5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bttParentese5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttParentese5ActionPerformed(evt);
            }
        });
        getContentPane().add(bttParentese5);
        bttParentese5.setBounds(120, 180, 180, 50);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-470)/2, (screenSize.height-282)/2, 470, 282);
    }// </editor-fold>//GEN-END:initComponents

    private void bttAndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttAndActionPerformed

        formula(evt);
    }//GEN-LAST:event_bttAndActionPerformed

    private void bttOrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttOrActionPerformed

        formula(evt);

    }//GEN-LAST:event_bttOrActionPerformed

    private void bttImplicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttImplicaActionPerformed

        formula(evt);

    }//GEN-LAST:event_bttImplicaActionPerformed

    private void bttBiImplicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttBiImplicaActionPerformed

        formula(evt);

    }//GEN-LAST:event_bttBiImplicaActionPerformed

    private void bttParentese1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttParentese1ActionPerformed

        formula(evt);

    }//GEN-LAST:event_bttParentese1ActionPerformed

    private void bttParentese2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttParentese2ActionPerformed

        formula(evt);

    }//GEN-LAST:event_bttParentese2ActionPerformed

    private void txtFormulaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFormulaFocusGained
        // TODO add your handling code here:
        if (txtFormula.getText().equals("Fórmula")) {
            txtFormula.setText("");
        }
    }//GEN-LAST:event_txtFormulaFocusGained

    private void txtFormulaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFormulaFocusLost
        if (txtFormula.getText().equals("")) {
            txtFormula.setText("Fórmula");
        }
    }//GEN-LAST:event_txtFormulaFocusLost

    private void txtFormulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFormulaKeyTyped
        // TODO add your handling code here:
        char v = Character.toUpperCase(evt.getKeyChar());
        
        if(!verificaEntrada(v)){
            evt.consume();
        }

    }//GEN-LAST:event_txtFormulaKeyTyped

    private void bttNegacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttNegacaoActionPerformed

        formula(evt);

    }//GEN-LAST:event_bttNegacaoActionPerformed

    private void bttParentese5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttParentese5ActionPerformed

        new TabelaVerdade(txtFormula.getText());

    }//GEN-LAST:event_bttParentese5ActionPerformed

    private void txtFormulaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFormulaKeyReleased
        txtFormula.setText(txtFormula.getText().toUpperCase());
    }//GEN-LAST:event_txtFormulaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FormDPLL().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttAnd;
    private javax.swing.JButton bttBiImplica;
    private javax.swing.JButton bttImplica;
    private javax.swing.JButton bttNegacao;
    private javax.swing.JButton bttOr;
    private javax.swing.JButton bttParentese1;
    private javax.swing.JButton bttParentese2;
    private javax.swing.JButton bttParentese5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtFormula;
    // End of variables declaration//GEN-END:variables
}
